{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nlet SignUpComponent = class SignUpComponent {\n  constructor(router, fb) {\n    this.router = router;\n    this.fb = fb;\n    this.submitted = false;\n  }\n  ngOnInit() {\n    this.form = this.fb.group({\n      name: ['', [Validators.required]],\n      email: ['', [Validators.required, Validators.pattern(\"^[a-zA-Z0-9_]+@+[a-zA-Z]+[.]+[a-zA-Z]+$\")]],\n      dob: ['', [Validators.required]],\n      password: ['', [Validators.required, Validators.pattern(\"^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-]).{8,}$\")]],\n      confirmPassword: ['', [Validators.required, Validators.minLength(1)]],\n      mobile: ['', [Validators.required, Validators.pattern(\"^[0-9]{10}$\"), Validators.maxLength(10)]]\n      // acceptTerms: [false, Validators.requiredTrue]\n    });\n  }\n\n  get name() {\n    return this.form.get('name');\n  }\n  get email() {\n    return this.form.get('email');\n  }\n  get mobile() {\n    return this.form.get('mobile');\n  }\n  get dob() {\n    return this.form.get('mobile');\n  }\n  get password() {\n    return this.form.get('mobile');\n  }\n  get confirmpassword() {\n    return this.form.get('mobile');\n  }\n  onSubmit() {\n    this.submitted = true;\n    // if (this.form.invalid) {\n    //   return;\n    // }\n    if (this.form.valid) {\n      this.router.navigate([\"login\"]);\n    }\n  }\n  login() {\n    this.router.navigate([\"login\"]);\n  }\n};\nSignUpComponent = __decorate([Component({\n  selector: 'app-sign-up',\n  templateUrl: './sign-up.component.html',\n  styleUrls: ['./sign-up.component.css']\n})], SignUpComponent);\nexport { SignUpComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AACjD,SAAiCC,UAAU,QAAQ,gBAAgB;AAQ5D,IAAMC,eAAe,GAArB,MAAMA,eAAe;EAO1BC,YAAoBC,MAAc,EAAUC,EAAe;IAAvC,WAAM,GAAND,MAAM;IAAkB,OAAE,GAAFC,EAAE;IAD/C,cAAS,GAAG,KAAK;EAC+C;EAE/DC,QAAQ;IACN,IAAI,CAACC,IAAI,GAAG,IAAI,CAACF,EAAE,CAACG,KAAK,CACvB;MACEC,IAAI,EAAE,CAAC,EAAE,EAAE,CAACR,UAAU,CAACS,QAAQ,CAAC,CAAC;MACjCC,KAAK,EAAE,CAAC,EAAE,EAAE,CAACV,UAAU,CAACS,QAAQ,EAAET,UAAU,CAACW,OAAO,CAAC,yCAAyC,CAAC,CAAC,CAAC;MAEjGC,GAAG,EAAE,CAAC,EAAE,EAAC,CAACZ,UAAU,CAACS,QAAQ,CAAC,CAAC;MAE/BI,QAAQ,EAAE,CAAC,EAAE,EAAC,CAACb,UAAU,CAACS,QAAQ,EAAET,UAAU,CAACW,OAAO,CAAC,gEAAgE,CAAE,CAAC,CAAC;MAC3HG,eAAe,EAAE,CAAC,EAAE,EAAE,CAACd,UAAU,CAACS,QAAQ,EAACT,UAAU,CAACe,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;MAEpEC,MAAM,EAAE,CAAC,EAAE,EAAC,CAAChB,UAAU,CAACS,QAAQ,EAAET,UAAU,CAACW,OAAO,CAAC,aAAa,CAAC,EAAEX,UAAU,CAACiB,SAAS,CAAC,EAAE,CAAC,CAAC;MAC9F;KACD,CAIF;EACH;;EAEA,IAAIT,IAAI;IACN,OAAO,IAAI,CAACF,IAAI,CAACY,GAAG,CAAC,MAAM,CAAE;EAC/B;EACA,IAAIR,KAAK;IACP,OAAO,IAAI,CAACJ,IAAI,CAACY,GAAG,CAAC,OAAO,CAAE;EAChC;EACA,IAAIF,MAAM;IACR,OAAO,IAAI,CAACV,IAAI,CAACY,GAAG,CAAC,QAAQ,CAAE;EACjC;EACA,IAAIN,GAAG;IACL,OAAO,IAAI,CAACN,IAAI,CAACY,GAAG,CAAC,QAAQ,CAAE;EACjC;EACA,IAAIL,QAAQ;IACV,OAAO,IAAI,CAACP,IAAI,CAACY,GAAG,CAAC,QAAQ,CAAE;EACjC;EACA,IAAIC,eAAe;IACjB,OAAO,IAAI,CAACb,IAAI,CAACY,GAAG,CAAC,QAAQ,CAAE;EACjC;EAEAE,QAAQ;IACN,IAAI,CAACC,SAAS,GAAG,IAAI;IACrB;IACA;IACA;IAEA,IAAI,IAAI,CAACf,IAAI,CAACgB,KAAK,EAAE;MACnB,IAAI,CAACnB,MAAM,CAACoB,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;;EAGnC;EAQAC,KAAK;IAEH,IAAI,CAACrB,MAAM,CAACoB,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;EAEjC;CACD;AAvEYtB,eAAe,eAL3BF,SAAS,CAAC;EACT0B,QAAQ,EAAE,aAAa;EACvBC,WAAW,EAAE,0BAA0B;EACvCC,SAAS,EAAE,CAAC,yBAAyB;CACtC,CAAC,GACW1B,eAAe,CAuE3B;SAvEYA,eAAe","names":["Component","Validators","SignUpComponent","constructor","router","fb","ngOnInit","form","group","name","required","email","pattern","dob","password","confirmPassword","minLength","mobile","maxLength","get","confirmpassword","onSubmit","submitted","valid","navigate","login","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\Abdul.B\\Desktop\\New folder\\example1\\src\\app\\sign-up\\sign-up.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-sign-up',\n  templateUrl: './sign-up.component.html',\n  styleUrls: ['./sign-up.component.css']\n})\nexport class SignUpComponent implements OnInit{\n\n  // username: string;\n  // password: string;\n\n  form : FormGroup;\n submitted = false;\n  constructor(private router: Router, private fb: FormBuilder) { }\n\n  ngOnInit(): void {\n    this.form = this.fb.group(\n      {\n        name: ['', [Validators.required]],      \n        email: ['', [Validators.required, Validators.pattern(\"^[a-zA-Z0-9_]+@+[a-zA-Z]+[.]+[a-zA-Z]+$\")]],\n        \n        dob :['',[Validators.required]],\n        \n        password: ['',[Validators.required, Validators.pattern(\"^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-]).{8,}$\" )]],\n        confirmPassword: ['', [Validators.required,Validators.minLength(1)]],\n\n        mobile :['',[Validators.required, Validators.pattern(\"^[0-9]{10}$\"), Validators.maxLength(10)]],\n        // acceptTerms: [false, Validators.requiredTrue]\n      },\n      // {\n      //   validators: [Validation.match('password', 'confirmPassword')]\n      // }\n    );\n  }\n\n  get name() {\n    return this.form.get('name')!;\n  }\n  get email() {\n    return this.form.get('email')!;\n  }\n  get mobile() {\n    return this.form.get('mobile')!;\n  }\n  get dob() {\n    return this.form.get('mobile')!;\n  }\n  get password() {\n    return this.form.get('mobile')!;\n  }\n  get confirmpassword() {\n    return this.form.get('mobile')!;\n  }\n\n  onSubmit() {\n    this.submitted = true;\n    // if (this.form.invalid) {\n    //   return;\n    // }\n\n    if (this.form.valid) {\n      this.router.navigate([\"login\"]);\n    }\n    \n  }\n\n\n\n\n\n\n  \n  login(): void {\n\n    this.router.navigate([\"login\"]);\n\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}