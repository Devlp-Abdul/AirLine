{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/forms\";\nexport class LoginPageComponent {\n  constructor(router) {\n    this.router = router;\n    this.username = '';\n    this.password = '';\n  }\n  login() {\n    if (this.username == 'hello' && this.password == 'admin123') {\n      this.router.navigate([\"home\"]);\n    } else {\n      alert(\"Invalid credentials\");\n    }\n  }\n}\nLoginPageComponent.ɵfac = function LoginPageComponent_Factory(t) {\n  return new (t || LoginPageComponent)(i0.ɵɵdirectiveInject(i1.Router));\n};\nLoginPageComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginPageComponent,\n  selectors: [[\"app-login-page\"]],\n  decls: 19,\n  vars: 1,\n  consts: [[1, \"col-md-4\"], [\"autocomplete\", \"off\", \"novalidate\", \"\"], [\"loginForm\", \"ngForm\"], [1, \"form-group\"], [\"for\", \"userName\"], [\"name\", \"userName\", \"required\", \"\", \"id\", \"userName\", \"type\", \"text\", \"placeholder\", \"User Name...\", 1, \"form-control\", 3, \"ngModel\"], [\"for\", \"password\"], [\"name\", \"password\", \"required\", \"\", \"id\", \"password\", \"type\", \"password\", \"placeholder\", \"Password...\", 1, \"form-control\", 3, \"ngModel\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"disabled\"], [\"type\", \"button\", 1, \"btn\", \"btn-default\"]],\n  template: function LoginPageComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h1\");\n      i0.ɵɵtext(1, \"Login\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(2, \"hr\");\n      i0.ɵɵelementStart(3, \"div\", 0)(4, \"form\", 1, 2)(6, \"div\", 3)(7, \"label\", 4);\n      i0.ɵɵtext(8, \"User Name:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"input\", 5);\n      i0.ɵɵlistener(\"ngModel\", function LoginPageComponent_Template_input_ngModel_9_listener() {\n        return ctx.username;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(10, \"div\", 3)(11, \"label\", 6);\n      i0.ɵɵtext(12, \"Password:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"input\", 7);\n      i0.ɵɵlistener(\"ngModel\", function LoginPageComponent_Template_input_ngModel_13_listener() {\n        return ctx.password;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(14, \"button\", 8);\n      i0.ɵɵtext(15, \"Login\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"button\", 9);\n      i0.ɵɵtext(17, \"Cancel\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(18, \"br\");\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      const _r0 = i0.ɵɵreference(5);\n      i0.ɵɵadvance(14);\n      i0.ɵɵproperty(\"disabled\", _r0.invalid);\n    }\n  },\n  dependencies: [i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.RequiredValidator, i2.NgModel, i2.NgForm],\n  styles: [\".align[_ngcontent-%COMP%] {\\r\\n    \\r\\n    margin: 350px 600px 100px 750px ;\\r\\n    \\r\\n    width: 400px;\\r\\n    border: 1px solid black;\\r\\n    border-radius: 10px;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvbG9naW4tcGFnZS9sb2dpbi1wYWdlLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0lBRUksZ0NBQWdDOztJQUVoQyxZQUFZO0lBQ1osdUJBQXVCO0lBQ3ZCLG1CQUFtQjtBQUN2QiIsInNvdXJjZXNDb250ZW50IjpbIi5hbGlnbiB7XHJcbiAgICBcclxuICAgIG1hcmdpbjogMzUwcHggNjAwcHggMTAwcHggNzUwcHggO1xyXG4gICAgXHJcbiAgICB3aWR0aDogNDAwcHg7XHJcbiAgICBib3JkZXI6IDFweCBzb2xpZCBibGFjaztcclxuICAgIGJvcmRlci1yYWRpdXM6IDEwcHg7XHJcbn1cclxuIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;AAQA,OAAM,MAAOA,kBAAkB;EAK7BC,YAAoBC,MAAc;IAAd,WAAM,GAANA,MAAM;IAH1B,aAAQ,GAAU,EAAE;IACpB,aAAQ,GAAU,EAAE;EAEkB;EAEtCC,KAAK;IACH,IAAG,IAAI,CAACC,QAAQ,IAAI,OAAO,IAAI,IAAI,CAACC,QAAQ,IAAI,UAAU,EAAC;MACzD,IAAI,CAACH,MAAM,CAACI,QAAQ,CAAC,CAAC,MAAM,CAAC,CAAC;KAC9B,MAAK;MACJC,KAAK,CAAC,qBAAqB,CAAC;;EAEjC;;AAbWP,kBAAkB;mBAAlBA,kBAAkB;AAAA;AAAlBA,kBAAkB;QAAlBA,kBAAkB;EAAAQ;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCR/BC,0BAAI;MAAAA,qBAAK;MAAAA,iBAAK;MACdA,qBAAI;MACJA,8BAAsB;MAGMA,0BAAU;MAAAA,iBAAQ;MAExCA,gCAAiI;MAA1HA;QAAA;MAAA,EAAoB;MAA3BA,iBAAiI;MAEnIA,+BAAyB;MACDA,0BAAS;MAAAA,iBAAQ;MAEvCA,iCAAmI;MAA5HA;QAAA;MAAA,EAAoB;MAA3BA,iBAAmI;MAInIA,kCAA6E;MAAAA,sBAAK;MAAAA,iBAAS;MAE7FA,kCAA+C;MAAAA,uBAAM;MAAAA,iBAAS;MAEhEA,sBAAI;MAENA,iBAAM;;;;MANsBA,gBAA8B;MAA9BA,sCAA8B","names":["LoginPageComponent","constructor","router","login","username","password","navigate","alert","selectors","decls","vars","consts","template","i0"],"sourceRoot":"","sources":["C:\\Users\\Abdul.B\\Desktop\\New folder\\example1\\src\\app\\login-page\\login-page.component.ts","C:\\Users\\Abdul.B\\Desktop\\New folder\\example1\\src\\app\\login-page\\login-page.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login-page',\n  templateUrl: './login-page.component.html',\n  styleUrls: ['./login-page.component.css']\n})\nexport class LoginPageComponent {\n\n  username: string ='';\n  password: string ='';\n\n  constructor(private router: Router) { }\n  \n  login() : void{\n    if(this.username == 'hello' && this.password == 'admin123'){\n      this.router.navigate([\"home\"]);\n     }else {\n       alert(\"Invalid credentials\");\n     }\n  }\n}\n","<h1>Login</h1>\n<hr>\n<div class=\"col-md-4\">\n  <form #loginForm=\"ngForm\"  autocomplete=\"off\" novalidate>\n    <div class=\"form-group\" >\n      <label for=\"userName\">User Name:</label>\n      <!-- <em *ngIf=\"loginForm.controls.userName?.invalid && (loginForm.controls.userName?.touched || mouseoverLogin)\">Required</em> -->\n      <input (ngModel)=\"username\" name=\"userName\" required id=\"userName\" type=\"text\" class=\"form-control\" placeholder=\"User Name...\" />\n    </div>\n    <div class=\"form-group\" >\n      <label for=\"password\">Password:</label>\n      <!-- <em *ngIf=\"loginForm.controls.password?.invalid  && (loginForm.controls.password?.touched || mouseoverLogin)\">Required</em> -->\n      <input (ngModel)=\"password\" name=\"password\" required id=\"password\" type=\"password\" class=\"form-control\"placeholder=\"Password...\" />\n    </div>\n    \n    <!-- <span (mouseenter)=\"mouseoverLogin=true\" (mouseleave)=\"mouseoverLogin=false\"> -->\n      <button type=\"submit\" [disabled]=\"loginForm.invalid\" class=\"btn btn-primary\">Login</button>\n    <!-- </span> -->\n    <button type=\"button\"  class=\"btn btn-default\">Cancel</button>\n  </form>\n  <br>\n  <!-- <div *ngIf=\"loginInvalid\" class=\"alert alert-danger\">Invalid Login Info</div> -->\n</div>\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}