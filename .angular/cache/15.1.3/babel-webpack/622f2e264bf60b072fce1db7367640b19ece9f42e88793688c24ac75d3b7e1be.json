{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/common\";\nfunction SignUpComponent_div_6_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" This field is required. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction SignUpComponent_div_6_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" This field must have at least 1 character. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction SignUpComponent_div_6_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" This field must have at most 250 characters. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction SignUpComponent_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 14);\n    i0.ɵɵtemplate(1, SignUpComponent_div_6_div_1_Template, 2, 0, \"div\", 15);\n    i0.ɵɵtemplate(2, SignUpComponent_div_6_div_2_Template, 2, 0, \"div\", 15);\n    i0.ɵɵtemplate(3, SignUpComponent_div_6_div_3_Template, 2, 0, \"div\", 15);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.name.errors == null ? null : ctx_r0.name.errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.name.errors == null ? null : ctx_r0.name.errors[\"minlength\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.name.errors == null ? null : ctx_r0.name.errors[\"maxlength\"]);\n  }\n}\nexport class SignUpComponent {\n  constructor(router, fb) {\n    this.router = router;\n    this.fb = fb;\n  }\n  ngOnInit() {\n    this.form = this.fb.group({\n      name: ['', Validators.required],\n      username: ['', [Validators.required, Validators.minLength(6), Validators.maxLength(20)]],\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required, Validators.minLength(6), Validators.maxLength(40)]],\n      confirmPassword: ['', Validators.required],\n      acceptTerms: [false, Validators.requiredTrue]\n    });\n  }\n  get name() {\n    return this.form.get('name');\n  }\n  onSubmit() {}\n  signup() {\n    // if (this.username == 'hello' && this.password == 'admin123') {\n    //   this.router.navigate([\"login\"]);\n    // }\n  }\n  login() {\n    this.router.navigate([\"login\"]);\n  }\n}\nSignUpComponent.ɵfac = function SignUpComponent_Factory(t) {\n  return new (t || SignUpComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.FormBuilder));\n};\nSignUpComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: SignUpComponent,\n  selectors: [[\"app-sign-up\"]],\n  decls: 38,\n  vars: 5,\n  consts: [[1, \"col-md-4\"], [\"autocomplete\", \"off\", 3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"name\"], [\"type\", \"text\", \"id\", \"name\", \"name\", \"name\", \"formControlName\", \"name\", \"placeholder\", \"Your name\", \"required\", \"\", \"minlength\", \"1\", \"maxlength\", \"250\", 1, \"form-control\", \"form-control-sm\"], [\"class\", \"invalid-feedback\", 4, \"ngIf\"], [\"id\", \"username\", \"type\", \"email\", \"formControlName\", \"mailid\", 1, \"form-control\"], [\"id\", \"username\", \"type\", \"number\", \"formControlName\", \"mobile\", 1, \"form-control\"], [\"id\", \"username\", \"type\", \"date\", \"formControlName\", \"dob\", 1, \"form-control\"], [\"id\", \"username\", \"type\", \"password\", \"formControlName\", \"password\", 1, \"form-control\"], [\"id\", \"username\", \"type\", \"password\", \"formControlName\", \"repassword\", 1, \"form-control\"], [1, \"btn\", \"btn-primary\", 3, \"click\"], [2, \"padding-top\", \"5px\"], [\"type\", \"button\", 1, \"btn\", \"btn-link\", 3, \"click\"], [1, \"invalid-feedback\"], [4, \"ngIf\"]],\n  template: function SignUpComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"form\", 1);\n      i0.ɵɵlistener(\"ngSubmit\", function SignUpComponent_Template_form_ngSubmit_1_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(2, \"div\", 2)(3, \"label\", 3);\n      i0.ɵɵtext(4, \"Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(5, \"input\", 4);\n      i0.ɵɵtemplate(6, SignUpComponent_div_6_Template, 4, 3, \"div\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"div\", 2)(8, \"label\");\n      i0.ɵɵtext(9, \"Mail-id\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(10, \"input\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"div\", 2)(12, \"label\");\n      i0.ɵɵtext(13, \"Mobile\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(14, \"input\", 7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"div\", 2)(16, \"label\");\n      i0.ɵɵtext(17, \"Date-of-Birth\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(18, \"input\", 8);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(19, \"div\", 2)(20, \"label\");\n      i0.ɵɵtext(21, \"Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(22, \"input\", 9);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(23, \"div\", 2)(24, \"label\");\n      i0.ɵɵtext(25, \"Re-enter password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(26, \"input\", 10);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(27, \"br\");\n      i0.ɵɵelementStart(28, \"button\", 11);\n      i0.ɵɵlistener(\"click\", function SignUpComponent_Template_button_click_28_listener() {\n        return ctx.signup();\n      });\n      i0.ɵɵtext(29, \"Sign-up\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(30, \"br\");\n      i0.ɵɵelementStart(31, \"p\");\n      i0.ɵɵtext(32);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(33, \"div\")(34, \"p\", 12);\n      i0.ɵɵtext(35, \"Already have an account?\");\n      i0.ɵɵelementStart(36, \"button\", 13);\n      i0.ɵɵlistener(\"click\", function SignUpComponent_Template_button_click_36_listener() {\n        return ctx.login();\n      });\n      i0.ɵɵtext(37, \"Sign-in\");\n      i0.ɵɵelementEnd()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formGroup\", ctx.form);\n      i0.ɵɵadvance(4);\n      i0.ɵɵclassProp(\"is-invalid\", ctx.name.invalid && (ctx.name.dirty || ctx.name.touched));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.name.invalid && (ctx.name.dirty || ctx.name.touched));\n      i0.ɵɵadvance(26);\n      i0.ɵɵtextInterpolate(ctx.form.status);\n    }\n  },\n  dependencies: [i3.NgIf, i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NumberValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.RequiredValidator, i2.MinLengthValidator, i2.MaxLengthValidator, i2.FormGroupDirective, i2.FormControlName],\n  styles: [\".col-md-4[_ngcontent-%COMP%]{\\r\\n    margin: 250px 400px 200px 350px ;\\r\\n    padding: 50px;\\r\\n    width: 600px;\\r\\n   \\r\\n    border: 1px solid black;\\r\\n    border-radius: 10px;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvc2lnbi11cC9zaWduLXVwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxnQ0FBZ0M7SUFDaEMsYUFBYTtJQUNiLFlBQVk7O0lBRVosdUJBQXVCO0lBQ3ZCLG1CQUFtQjtBQUN2QiIsInNvdXJjZXNDb250ZW50IjpbIi5jb2wtbWQtNHtcclxuICAgIG1hcmdpbjogMjUwcHggNDAwcHggMjAwcHggMzUwcHggO1xyXG4gICAgcGFkZGluZzogNTBweDtcclxuICAgIHdpZHRoOiA2MDBweDtcclxuICAgXHJcbiAgICBib3JkZXI6IDFweCBzb2xpZCBibGFjaztcclxuICAgIGJvcmRlci1yYWRpdXM6IDEwcHg7XHJcbn1cclxuIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["Validators","i0","SignUpComponent","constructor","router","fb","ngOnInit","form","group","name","required","username","minLength","maxLength","email","password","confirmPassword","acceptTerms","requiredTrue","get","onSubmit","signup","login","navigate","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\Abdul.B\\Desktop\\New folder\\example1\\src\\app\\sign-up\\sign-up.component.ts","C:\\Users\\Abdul.B\\Desktop\\New folder\\example1\\src\\app\\sign-up\\sign-up.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-sign-up',\n  templateUrl: './sign-up.component.html',\n  styleUrls: ['./sign-up.component.css']\n})\nexport class SignUpComponent {\n\n  // username: string;\n  // password: string;\n\n  form : FormGroup;\n  constructor(private router: Router, private fb: FormBuilder) { }\n\n  ngOnInit(): void {\n    this.form = this.fb.group(\n      {\n        name: ['', Validators.required],\n        username: [\n          '',\n          [\n            Validators.required,\n            Validators.minLength(6),\n            Validators.maxLength(20)\n          ]\n        ],\n        email: ['', [Validators.required, Validators.email]],\n        password: [\n          '',\n          [\n            Validators.required,\n            Validators.minLength(6),\n            Validators.maxLength(40)\n          ]\n        ],\n        confirmPassword: ['', Validators.required],\n        acceptTerms: [false, Validators.requiredTrue]\n      },\n      // {\n      //   validators: [Validation.match('password', 'confirmPassword')]\n      // }\n    );\n  }\n\n  get name() {\n    return this.form.get('name')!;\n  }\n\n\n\n\n\n\n\n\n\n\n\n\n  onSubmit() { }\n\n  signup(): void {\n    // if (this.username == 'hello' && this.password == 'admin123') {\n    //   this.router.navigate([\"login\"]);\n    // }\n  }\n  login(): void {\n\n    this.router.navigate([\"login\"]);\n\n  }\n}\n","<div class=\"col-md-4\">\n  <form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\" autocomplete=\"off\">\n\n    <div class=\"form-group\">\n      <label for=\"name\">Name</label>\n      <input type=\"text\" id=\"name\" name=\"name\" formControlName=\"name\" placeholder=\"Your name\" required minlength=\"1\" maxlength=\"250\" class=\"form-control form-control-sm\" [class.is-invalid]=\"name.invalid && (name.dirty || name.touched)\">\n            <div *ngIf=\"name.invalid && (name.dirty || name.touched)\" class=\"invalid-feedback\">\n              <div *ngIf=\"name.errors?.['required']\">\n                This field is required.\n              </div>\n              <div *ngIf=\"name.errors?.['minlength']\">\n                This field must have at least 1 character.\n              </div>\n              <div *ngIf=\"name.errors?.['maxlength']\">\n                This field must have at most 250 characters.\n              </div>\n            </div>\n    </div>\n\n    <div class=\"form-group\">\n      <label>Mail-id</label>\n      <input id=\"username\" type=\"email\" class=\"form-control\" formControlName=\"mailid\">\n    </div>\n\n    <div class=\"form-group\">\n      <label>Mobile</label>\n      <input id=\"username\" type=\"number\" class=\"form-control\" formControlName=\"mobile\">\n    </div>\n\n    <div class=\"form-group\">\n      <label>Date-of-Birth</label>\n      <input id=\"username\" type=\"date\" class=\"form-control\" formControlName=\"dob\">\n    </div>\n\n    <div class=\"form-group\">\n      <label>Password</label>\n      <input id=\"username\" type=\"password\" class=\"form-control\" formControlName=\"password\" />\n    </div>\n\n    <div class=\"form-group\">\n      <label>Re-enter password</label>\n      <input id=\"username\" type=\"password\" class=\"form-control\" formControlName=\"repassword\" />\n    </div>\n\n    <br>\n    <button class=\"btn btn-primary\" (click)=\"signup()\">Sign-up</button>\n    <br>\n\n    <p>{{form.status}}</p>\n    <div>\n\n      <p style=\"padding-top: 5px;\">Already have an account?<button type=\"button\" class=\"btn btn-link\"\n          (click)=\"login()\">Sign-in</button></p>\n    </div>\n\n  </form>\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}