{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\n// import { HttpClient } from '@angular/common/http'\nlet SignUpComponent = class SignUpComponent {\n  constructor(router, fb, MatchPasswordService, service) {\n    this.router = router;\n    this.fb = fb;\n    this.MatchPasswordService = MatchPasswordService;\n    this.service = service;\n    this.submitted = false;\n  }\n  ngOnInit() {\n    this.form = this.fb.group({\n      name: ['', [Validators.required]],\n      email: ['', [Validators.required, Validators.pattern(\"^[a-zA-Z0-9_]+@+[a-zA-Z]+[.]+[a-zA-Z]+$\")]],\n      dob: ['', [Validators.required]],\n      password: ['', [Validators.required, Validators.pattern(\"^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-]).{8,}$\")]],\n      confirmpassword: ['', [Validators.required]],\n      mobile: ['', [Validators.required, Validators.pattern(\"^[0-9]{10}$\"), Validators.maxLength(10)]]\n      // acceptTerms: [false, Validators.requiredTrue]\n    }, {\n      validators: [this.MatchPasswordService.matchPassword(\"password\", \"confirmpassword\")]\n    });\n  }\n  get name() {\n    return this.form.get('name');\n  }\n  get email() {\n    return this.form.get('email');\n  }\n  get dob() {\n    return this.form.get('dob');\n  }\n  get password() {\n    return this.form.get('password');\n  }\n  get confirmpassword() {\n    return this.form.get('confirmpassword');\n  }\n  get mobile() {\n    return this.form.get('mobile');\n  }\n  onSubmit(sign) {\n    this.submitted = true;\n    if (this.form.valid) {\n      console.log(sign.value);\n      var val = {\n        EmployeeName: this.name,\n        Department: this.email,\n        DateOfJoining: this.dob\n        // Password: this.password,\n        // Mobile: this.mobile\n      };\n\n      this.service.signpost(val).subscribe(res => {\n        alert(res.toString());\n      });\n    }\n  }\n  login() {\n    this.router.navigate([\"login\"]);\n  }\n};\nSignUpComponent = __decorate([Component({\n  selector: 'app-sign-up',\n  templateUrl: './sign-up.component.html',\n  styleUrls: ['./sign-up.component.css']\n})], SignUpComponent);\nexport { SignUpComponent };","map":{"version":3,"mappings":"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","names":["Component","Validators","SignUpComponent","constructor","router","fb","MatchPasswordService","service","ngOnInit","form","group","name","required","email","pattern","dob","password","confirmpassword","mobile","maxLength","validators","matchPassword","get","onSubmit","sign","submitted","valid","console","log","value","val","EmployeeName","Department","DateOfJoining","signpost","subscribe","res","alert","toString","login","navigate","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\Abdul.B\\Desktop\\New folder\\example1\\src\\app\\sign-up\\sign-up.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { MatchPasswordService } from '../services/match-password.service';\nimport { ApiService } from '../services/api.service';\n// import { HttpClient } from '@angular/common/http'\n\n@Component({\n  selector: 'app-sign-up',\n  templateUrl: './sign-up.component.html',\n  styleUrls: ['./sign-up.component.css']\n})\nexport class SignUpComponent implements OnInit {\n\n\n\n\n  form: FormGroup;\n  submitted = false;\n  constructor(private router: Router, private fb: FormBuilder, private MatchPasswordService: MatchPasswordService,\n    private service: ApiService) { }\n\n  ngOnInit(): void {\n    this.form = this.fb.group(\n      {\n        name: ['', [Validators.required]],\n        email: ['', [Validators.required, Validators.pattern(\"^[a-zA-Z0-9_]+@+[a-zA-Z]+[.]+[a-zA-Z]+$\")]],\n\n        dob: ['', [Validators.required]],\n\n        password: ['', [Validators.required, Validators.pattern(\"^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-]).{8,}$\")]],\n        confirmpassword: ['', [Validators.required]],\n\n        mobile: ['', [Validators.required, Validators.pattern(\"^[0-9]{10}$\"), Validators.maxLength(10)]],\n        // acceptTerms: [false, Validators.requiredTrue]\n      },\n      {\n        validators: [\n          this.MatchPasswordService.matchPassword(\"password\", \"confirmpassword\"),\n        ],\n      }\n    );\n  }\n\n  get name() {\n    return this.form.get('name');\n  }\n  get email() {\n    return this.form.get('email');\n  }\n\n  get dob() {\n    return this.form.get('dob');\n  }\n  get password() {\n    return this.form.get('password');\n  }\n  get confirmpassword() {\n    return this.form.get('confirmpassword');\n  }\n  get mobile() {\n    return this.form.get('mobile');\n  }\n\n  onSubmit(sign) {\n    this.submitted = true;\n\n    if (this.form.valid) {\n      console.log(sign.value);\n\n      var val = {\n        EmployeeName: this.name,\n        Department: this.email,\n        DateOfJoining: this.dob,\n        // Password: this.password,\n        // Mobile: this.mobile\n      };\n\n      this.service.signpost(val).subscribe(res=>{\n        alert(res.toString());\n      });\n    }\n  }\n\n\n  login(): void {\n\n    this.router.navigate([\"login\"]);\n\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}